<?php

namespace App\Http\Resources;

use App\Comment;
use Illuminate\Http\Resources\Json\JsonResource;
use Illuminate\Support\Facades\Log;

class EventWithComment extends JsonResource
{
    /**
     * Transform the resource into an array.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    private $comments;
    public function toArray($request)
    {
        $this->comments = $this->comments()->withCount(['likes' => function ($query){
            $query->where('action','like');
        }])->where('event_id',$this->id)->latest('likes_count')->paginate();
        $likes = $this->likes;
        $like = $likes->where('user_id',auth()->id())->first();
        return [
            'id' => $this->id,
            'community_id' => $this->community_id,
            'user_id' => $this->user_id,
            'username' => $this->user->name ?? '',
            'title' => $this->title,
            'description' => $this->description,
            'status' => $this->status,
            'like' => $this->when($like,function ()use($like){return $like->action == 'like';}),
            'like_count' => $likes->where('action','like')->count(),
            'dislike_count' => $likes->where('action','dislike')->count(),
            'date' => $this->created_at->diffForHumans(),
            'community' => new Community($this->community),
            'comments' => [
                'data' => new CommentCollection($this->comments),
                'current_page' => $this->comments->currentPage(),
                'last_page' => $this->comments->lastPage(),
                'total' => $this->comments->total(),
            ],
        ];
    }

    public function with($request)
    {
        return ['error' => false,'ip' => $request->ip()]; // TODO: Change the autogenerated stub
    }
}
